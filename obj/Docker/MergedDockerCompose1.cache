name: dockercompose6501569519004130441
services:
  grade:
    build:
      context: D:\Code\Grade
      dockerfile: Grade/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Grade
      target: base
    container_name: Grade
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: grade:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/Grade.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      postgres-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: D:\Code\Grade\Grade
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\marco\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\marco\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\marco\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\marco\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\Code\Grade
      target: /src
      bind:
        create_host_path: true
  pgadmin:
    container_name: pgadmin
    depends_on:
      postgres:
        condition: service_started
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_DEFAULT_USERNAME: admin
      PGADMIN_LISTEN_PORT: "80"
    image: dpage/pgadmin4
    networks:
      postgres-network: null
    ports:
    - mode: ingress
      target: 80
      published: "8080"
      protocol: tcp
  postgres:
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USERNAME: admin
    image: postgres
    networks:
      postgres-network: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    volumes:
    - type: volume
      source: pgdata
      target: /var/lib/postgresql/data
      volume: {}
    - type: volume
      source: pgconf
      target: /etc/postgresql
      volume: {}
    - type: volume
      source: pglog
      target: /var/log/postgresql
      volume: {}
networks:
  postgres-network:
    name: dockercompose6501569519004130441_postgres-network
    driver: bridge
volumes:
  pgconf:
    name: dockercompose6501569519004130441_pgconf
    driver: local
  pgdata:
    name: dockercompose6501569519004130441_pgdata
    driver: local
  pglog:
    name: dockercompose6501569519004130441_pglog
    driver: local